3/8/24

  angular : javascript framework 
  react : it is javascript 

  
 s/w prerequist 
-nodejs
-npm
-editor 

 there are two waya to create react 
 1.npx: there is no need to install configuration. 
      step1: npx create-reate-app appname
      step2: cd appname
      step3: npm start
 
 2.npm :in this first we have install configuration file 
         step1: npm i -g create-reate-app
         step2:create-reate-app appname
         step3: cd appname
         step4: npm start
 
*In React there are two types of component 
1. function component:
2. class component:    
===========================================================================
5/8/2024

*What is react :
-it is javascript library.
-it is use rich UI.
-it it use create SPA(Single Page Application)


*App is root component.


*component: it is reusable block of code or partial part of webapp
            -it can be any part of react app.
            -we can reuse multiple time 

*In React there are two types of component 
1. function component: when your main focus is on UI design.
2. class component:  when you need to deal with comples logic with design.

Notes: while creating component its file name must start capital letter

JSX(javascript+XML) : it makes react code easy, as well as it allows us to write html code in react component.
                     -in component two wrap multiple elemenent we have to use one parent element and parent elemenent must block elemenent like div,h1-h6.


*props : it is parameter or functional parameter use to pass data inside component.
        -it return object type of data. 
        -we write props in starting tag of component in key and value pairs. 
        -we can access props in function component  by write props.propsName. 
        -we can access props in class component  by write this.props.propsName.


*method and event in react 

MyEventComp (fc)
MyEventTwoComp (cc)


*State : it is use to handle essential data in class component.
        -it return object type of data.
        -in class component we write state in constructor.
        -we can access state data by writting this.state.properyname
        -form react version 16 we can use state in function component by using hook.

*setState : to update or change state data in class component for setState method is use.

MyStateComp (cc)         

Task1.:MyInfoComp (cc) and pass props name,post,compony,address,contact,gender and display on browser 
Task2: MyCounterCom (cc) having state with count property display count value , create three button which increment,decrement and reset counter value.

Task1 done by : ancilla,pooja ananda,pravin,girish,rajeev,pooja kadam
Task2 done :ancilla,pooja ananda,pravin,rajeev,pooja kadam
===============================================================
06/8/24

*how to use css in React component
1.internal css: in starting we us style attribute and in that we can css property and values.
2.external css: in this we create a seperate css file and import in component.
3.module css : whe we have css property for perticular component in that case we use it. we can create module css file by writting fileName.module.css 

MyCssComp (cc)
MyImagesComp (cc)

*How to insert images and multimedia file 
*how to access constant data 

create class component with ToggleImgCom ,in this task you have toggle image with its name when you click on single 

*conditional Rendering : display component output or view on the basis condition 
1.if else: if condition is true then if block will execute 
2.element as variable: in this we store data in variable first and then we return that variable as an element.
3.use of ternary operator: it is an shorthand syntax for if else 
                          syntax:   (condition) ? truepart : falsepart;
4.short-circuit (&&): it will display lement or component output only if condition is true.


ConditionlRenComp cc

*use extension for creating component in react 
rce : it will gender class component structure 
rconst : it will generate constructor with super method and state 
rfce: it will generate normal function component.
rafce: it will generate arrow function component.

if you want to create parent child relation inbetweeb component for this first you have import child component in parent component and write its name as tag. 


*PureComponent:-it is react component which prevent un-necessary re-Rendering of class component.
               -by performing shallow comparision it chek data if it is same then it preven component to re-render.
               -to achive we have extends class component with PureComponent.
*React.memo():  it ie reat method which  prevent un-necessary re-Rendering of class component. 
-by performing shallow comparision it chek data if it is same then it preven component to re-render.
-to achive this you have to pass component name as an argument to React.memo() method             

MyPureComp (cc)

ParentComp (cc)
ChildComp (fc)
============================================================
7/8/24

Toggle image:pravin,shweta,poornima,ancilla,surya,pooja ananda,pooja k
show multiple images :pravin,shweta,poornima,ancilla,surya,pooja ananda,pooja k


*How to use bootdtrap in react project 

step1: install bootdtrap 
        npm i bootstrap 
step2: import bootdtrap path in index.js file 

*Render array of object data in class component.
RenderListComp (cc)

*Virtual DOM:

ClickCounter (cc) it has state counte write one methode when you you click on button counter value will be increment by 1
HoverCounter (cc) it has state counte write one methode when you hover mouse on it  counter value will be increment by 1

HOC(Heigher Order component): it is technique which allows us to share comman bussiness logic with multiple component
                             -in HOC we share data or logic from function component to class component.
                             -here we pass data through props 


*Hooks In React : it allows us to use class component feature in function component.
                 -it allows allows us to use state in function component.
                 -from react version-16 hooks introduces in it. 
                 -before using hooks in function component first we have import it from react library.

rules for Hooks :
-React Hooks will woek only with function component.
-React hook can not be conditionaly render.
-react Hooks always in top levell component. 

*In React here are 7 hooks
1.useState hook:
2.useEffect hook:
3.useContext hook:
4.useReducer hooks:
5.useCallback hooks:
6.useMemo hooks:
7.custome hooks:




*useState hook: 
if you want to use state in function component for this we use it.
-before using it ,first we have to import it from react library.
-it return two value 1.current State,2. method to update current state
-in useState Hook we can pass all type of data 


*form validation 

FormValComp  fc
=====================================================================
8/8/24


*component Lifecycle method
-it tells how component work.
-it comes with four phases 

1.Mounting Phase:
-constructor:when we create object of class or write component name as tag then it execute.
-getDerivedStateFromProps:it is static method ,which is use to set data state comming props
-render: it is use to render data or information.
-componentDidMount: it method execute after render method,

2.Update Phase:
-constructor
-shouldComponentUpdate: it is use to decide wether component get update or not . it return boolean value
-render:after updating state value it display it 
-getSnapshotBeforeUpdate: it will return state value before update.
-componentDidUpdate: it will return state value after update 

3.Unmounting Phase:
componentWillunmount:-it will execute automatically when we delete component.
                     -all disconnect operation we write.
4.Error Phase: it will show errors in component
-getDerivedStateFromError:it will execute after error occure in component.
-componentDidcatch:it gives error log or error information


*Error Boundary :-it ic react component which catches error while rendering component.
                 -in this we put all components inside one parent component and parent component will be error boundary component.
                 -while writting logic for error boundary your component must be only class component.
                 -to implement Error Boundary we use two Lifecycle method 1.getDerivedStateFromError,componentDidCatch
                 -getDerivedStateFromError : it execute automatically when error occure in component.
                 -componentDidCatch: it will return error log (information)
                

*Material UI:
it is library,which which provide inbuilt component
-as well as it provide icon 

*Material Icon 

npm install @mui/material @emotion/react @emotion/styled
npm install @mui/icons-material

ErrorBoundaryComp (cc)

============================================================================
9/8/24
*Routing :-navigation of components 
          -display component output by writting its routing path in browser url
          -to perform routing we have install react-router-dom library
          -to display routing component output we have to write <Outlet/>

npm install react-router-dom
npm i react-router-dom

src folder 
   layout folder 
      MainDashbordComp fc 
      NavCom     fc 
      FooterComp fc
      PageNotFound  fc 
   MainRouting folder 
      routing.js   normal js file

Hooks folder 
 ReactHooksComp    fc 
 UseEffectHookComp   fc

*Types of routing 
1.naming routing 
2.default routing 
3.parameterize routing 
4.child routing 
5.wild card routing 

*navigation of component by click on button or link 

*React.Fragment: it is an alternavtive for jsx 
                -it do not dispay unnecessary elemenent in browser dom heirarchy
*Use to material UI inbuilt Template
==================================================================================================
12/8/24

*useEffect Hooks : is use to perform side eefect in function component.
                  -side effect means fetching data from server, using timmer.
                  -use effect execute only after component render.
                  -when state value chnage useEffect Hook will execute automaticaaly.
                  -it takes two parameter 1.callback function, 2.dependecy 
                  syntax:  useEffect(()=>{},[])

case1: when no dependency pass 
useEffect(()=>{})    // it will execute after every render or return method.

case2:when we pass dependecy as blank array 
useEffect(()=>{},[])   //it will execute only once after  render or return method.

case3: when we pass value as dependecy
useEffect(()=>{},[state or props])  // //it will execute only once after  render or return method as well as when state or props value change.

fc 

ProductDashComp
ProductAddComp 
ProductEditComp

*Axios : it is library which allows us to make request from react app to server 
         -it work on promisses technique.
         to use it first we have to install it.

         npm install axios

*Created Json Database successfully
*How to start json server with database.
cd src/shared/database 
json-server --watch -p 8888 db.json

In Packake.json 
"json-server":"cd src/shared/database && json-server --watch -p 8888 db.json",
"start-dev": "concurrently \"npm start\" \"npm run json-server\"",

restart server with command 
npm run start-dev 
=============================================================================
13/8/24

*we successfully perform get request 
*we display array of object data in table 
*we added three MUI icon in product dashboard
*we successfully perform delete request 

*use of React Bootstrap 

npm install react-bootstrap bootstrap
=============================================================

14/8/24
*use of react-bootstrap modal popup
*we successfully perform post request 
========================================================
16/8/24

*How to update data 
*We perform put request successfully.

ProtectedRouteComp   fc 
*task1: you have signout concept 
===================================================================
19/8/24

*Here we implement signout with session clear 
*Lazyloading : loading module on demand 
-we implement this in routing file 


*useRef Hook : 
-it allows us to access DOM Node directly.
-as well as it persist value at render. 
-useRef hook return one object "current"

















































































































